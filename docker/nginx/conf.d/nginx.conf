upstream app {
    server app:8000;
}

server {
    listen 80;
    listen [::]:80;

    # need to modified before server deployment, use localhost domain for local deploy test
    server_name localhost;

    location / {
        return 302 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    # need to modified before server deployment, use localhost domain for local deploy test
    server_name localhost;

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/m3u8/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/m3u8/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/m3u8/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://app;
        # for reduce TCP connection total
        proxy_http_version 1.1;
        # for give upstream server Host info
        proxy_set_header Host $host;
        # for give upstream server ip info
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # for give upstream server scheme info
        proxy_set_header X-Forwarded-Proto $scheme;
        # for websocket proxying
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        # for client turning off redirect function
        proxy_redirect off;
        # for upstream server keep connecting to nginx, not using nginx ram and disk storage
        proxy_buffering off;
        # Defines a timeout for reading a response from the proxied server (between two successive read operations), 
        # If the proxied server does not transmit anything within this time, the connection is closed.
        proxy_read_timeout 300;
        # Defines a timeout for establishing a connection with a proxied server
        proxy_connect_timeout 300;
        # Defines a timeout for transmitting request connection to proxied server (between two successive write operations), 
        # If the proxied server does not receive anything within this time, the connection is closed.
        proxy_send_timeout 300;
        # Defines a timeout for transmitting response to the client (between two successive write operations), 
        # If the client does not receive anything within this time, the connection is closed.
        send_timeout 300;
    }
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}